AWSTemplateFormatVersion: 2010-09-09
Parameters:
    DeploymentGroupName:
      Description: 'The deployment group name'
      Default: MyAppGroup
      Type: String
    GitHubOwner:
      Description: 'The owner of the GitHub repository.'
      Type: String
      Default: javahometech
    GitHubOAuthToken:
      Description: 'The OAuthToken of the GitHub user.'
      Default: 80ea1e00ff86de67478df6328af60db3a02f9ff5
      Type: String
    GitHubRepo:
      Description: 'The GitHub repository.'
      Type: String
      Default: myweb
    ServiceName:
        Type: String
        Description: Name of the service being built. This name will be reflected in the pipeline name and build names.
    Stage:
        Type: String
        AllowedValues:
          - alpha
          - beta
          - prod
        Description: Enter alpha, beta or prod to designate the deployment stage/environment
    #DeploymentZipName:
#        Type: String
#        Default: tailor-deploy.zip
#        Description: Enter the name of the zip artifact in S3 that CodePipeline will watch to invoke the pipeline
    SAMInputFile:
        Type: String
        Default: main.yaml
        Description: Enter the name of the SAM input file
    BuildArtifactsBucket:
        Type: String
        Description: Enter the name of the S3 bucket that will store all artifacts
    EC2TagKey:
        Type: String
        Description: Enter the key for code deploy instances
        Default: Name  
    EC2TagValue:
        Type: String
        Description: Enter the value for code deploy instances
        Default: Dev      
        
Resources:
    # CodeBuild project and resources (S3 Bucket for build artifacts, Role, Project)
    CodeBuildServiceRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Action:
                      - 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                      Service:
                        - codebuild.amazonaws.com
            Policies:
                - PolicyName: CodeBuildAccess
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                      - Effect: Allow
                        Resource:
                          - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ServiceName}-build-${Stage}'
                          - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ServiceName}-build-${Stage}:*'
                        Action:
                          - 'logs:CreateLogGroup'
                          - 'logs:CreateLogStream'
                          - 'logs:PutLogEvents'
                      - Effect: Allow
                        Resource:
                          - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
                        Action:
                          - 's3:GetObject'
                          - 's3:GetObjectVersion'
                          - 's3:PutObject'
    CodeBuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
            Name: !Sub '${ServiceName}-build-${Stage}'
            Description: Build project for myApp
            Artifacts:
              Type: CODEPIPELINE
            Environment:
                Type: LINUX_CONTAINER
                ComputeType: BUILD_GENERAL1_SMALL
                Image: aws/codebuild/java:openjdk-8
                EnvironmentVariables:
                    - Name: S3_BUCKET
                      Value: !Sub '${BuildArtifactsBucket}'
                    - Name: SAM_INPUT_FILE
                      Value: !Ref SAMInputFile
            ServiceRole: !GetAtt CodeBuildServiceRole.Arn
            Source:
                Type: CODEPIPELINE

    # CodePipeline definition and required roles
    CFNPipelinePolicy:
        Type: AWS::IAM::ManagedPolicy
        Properties:
            Description: CloudFormation Pipeline Execution Policy
            Path: "/"
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                    Effect: Allow
                    Action:
                        - 'cloudformation:CreateStack'
                        - 'cloudformation:DescribeStacks'
                        - 'cloudformation:DeleteStack'
                        - 'cloudformation:UpdateStack'
                        - 'cloudformation:CreateChangeSet'
                        - 'cloudformation:ExecuteChangeSet'
                        - 'cloudformation:DeleteChangeSet'
                        - 'cloudformation:DescribeChangeSet'
                        - 'cloudformation:SetStackPolicy'
                        - 'cloudformation:SetStackPolicy'
                        - 'cloudformation:ValidateTemplate'
                        - 'codebuild:StartBuild'
                        - 'codebuild:BatchGetBuilds'
                    Resource: "*"
    CloudFormationExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
        Path: /
        ManagedPolicyArns:
          - 'arn:aws:iam::aws:policy/AdministratorAccess'
    PipelineExecutionRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Action:
                    - 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                      Service:
                        - codepipeline.amazonaws.com
            Path: /
            ManagedPolicyArns:
                - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
                - !Ref CFNPipelinePolicy
            Policies:
                - PolicyName: CodePipelineAccess
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                        - Action:
                            - 'iam:PassRole'
                            - 'lambda:InvokeFunction'
                            - 'lambda:ListFunctions'
                            - 'lambda:InvokeAsyc'
                          Effect: Allow
                          Resource: '*'
    Pipeline:
        Type: AWS::CodePipeline::Pipeline
        Properties:
            ArtifactStore:
                Location: !Sub ${BuildArtifactsBucket}
                Type: S3
            Name: !Sub ${ServiceName}-pipeline-${Stage}
            RoleArn: !GetAtt PipelineExecutionRole.Arn
            Stages:
                - Name: Source
                  Actions: 
                    - Name: Source
                      ActionTypeId:
                          Category: Source 
                          Owner: ThirdParty 
                          Version: 1 
                          Provider: GitHub
                      Configuration:
                          Owner: !Ref GitHubOwner
                          Repo: !Ref GitHubRepo
                          Branch: master
                          OAuthToken: !Ref GitHubOAuthToken
                      OutputArtifacts:
                        - Name: SourceZip
                - Name: Build
                  Actions:
                    - Name: PackageCode
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: 1
                      Configuration:
                        ProjectName: !Ref CodeBuildProject
                      InputArtifacts:
                        - Name: SourceZip
                      OutputArtifacts:
                        - Name: SamTemplate
                - Name: Deploy
                  Actions:
                    - Name: MyAppCodeDeploy
                      InputArtifacts: 
                          - Name: SamTemplate
                      ActionTypeId:
                        Category: Deploy
                        Owner: AWS
                        Provider: CodeDeploy
                        Version: 1
                      Configuration:
                        ApplicationName:
                          Ref: MyApplication
                        DeploymentGroupName:
                          Ref: DeploymentGroup 
                      RunOrder: 1
                    
    MyApplication: 
      Type: "AWS::CodeDeploy::Application"
      Properties:
        ApplicationName: !Sub '${ServiceName}-Deploy-${Stage}' 
    DeploymentGroup:
      Type: 'AWS::CodeDeploy::DeploymentGroup'
      Properties:
        ApplicationName: !Ref MyApplication
        DeploymentConfigName: !Ref DeploymentConfig
        DeploymentGroupName: !Ref DeploymentGroupName
        Ec2TagFilters:
          - Key: !Ref EC2TagKey
            Value: !Ref EC2TagValue
            Type: KEY_AND_VALUE
        ServiceRoleArn: !GetAtt 'CodeDeployServiceRole.Arn'    
        
    DeploymentConfig:
      Type: 'AWS::CodeDeploy::DeploymentConfig'
      Properties:
        MinimumHealthyHosts:
          Type: FLEET_PERCENT
          Value: '25'
    CodeDeployServiceRole:
        Type: 'AWS::IAM::Role'
        Properties:
          AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Principal:
                Service:
                - 'codedeploy.amazonaws.com'
              Action:
              - 'sts:AssumeRole'
          Path: '/'
          ManagedPolicyArns:
          - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'                          